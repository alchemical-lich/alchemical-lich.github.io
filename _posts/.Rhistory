###########################################
rm(list=ls(all=TRUE))
library(raster)
library(maptools)
library(rgdal)
library(raster)
library(rgeos)
library(lattice)
library(fields)
library(gplots)
library(spdep)
library(cshapes)
library(countrycode)
library(sp)
library(rgdal)
library(foreign)
library(geosphere)
library(ggplot2)
library(plyr)
library(tidyverse)
library(data.table)
library(geojsonio)
library(Rfast)
library(ineq)
library(haven)
plot.heat <- function(counties.map,z,title=NULL,breaks=NULL,reverse=FALSE,cex.legend=1,bw=.2,col.vec=NULL,plot.legend=TRUE) {
##Break down the value variable
if (is.null(breaks)) {
breaks=
seq(
floor(min(counties.map@data[,z],na.rm=TRUE)*10)/10
,
ceiling(max(counties.map@data[,z],na.rm=TRUE)*10)/10
,.1)
}
counties.map@data$zCat <- cut(counties.map@data[,z],breaks,include.lowest=TRUE)
cutpoints <- levels(counties.map@data$zCat)
if (is.null(col.vec)) col.vec <- gray.colors(length(levels(counties.map@data$zCat)))
if (reverse) {
cutpointsColors <- rev(col.vec)
} else {
cutpointsColors <- col.vec
}
levels(counties.map@data$zCat) <- cutpointsColors
plot(counties.map,border="transparent",lwd=0.00001,axes = FALSE, las = 1,col=as.character(counties.map@data$zCat))
#if (!is.null(state.map)) {
# plot(state.map,add=TRUE,lwd=1)
#}
##with(counties.map.c,text(x,y,name,cex=0.75))
if (plot.legend) legend("bottomleft", cutpoints, fill = cutpointsColors,bty="n",title=title,cex=cex.legend)
##title("Cartogram")
}
###########################################
### Load Data
###########################################
## Grid shape file from the African Borders paper
grid_shape <- readOGR("/Users/janpierskalla/Library/CloudStorage/Dropbox/Paper - Imperialism Dynamics/Data/AfricanBordersReplication/Shapefiles/Grid cells/grid_05x05.shp")
plot(grid_shape)
names(grid_shape@data)
llCRS<-CRS("+proj=longlat +ellps=WGS84")
grid_shape <- spTransform(grid_shape, llCRS)
plot(grid_shape)
## Load Core Data from the African Borders Paper
grid_data <- read_dta("/Users/janpierskalla/Library/CloudStorage/Dropbox/Paper - Imperialism Dynamics/Data/AfricanBordersReplication/griddata_final.dta")
names(grid_data)
# add grid_data to shapefile
grid_shape@data <- join(grid_shape@data, grid_data, by="id", type="left")
names(grid_shape@data)
dist <- c(-1,0,1,2)
plot.heat(grid_shape,z="contestedports",breaks=dist,reverse=TRUE,plot.legend=F)
# elevation
elev <- raster("~/Dropbox/GIS_Data/elevation/srtm_1km.asc")
# Crop raster to include only Africa
e <- extent(grid_shape)
elev_crop <- crop(elev,e)
elev_grid <- mask(elev_crop, grid_shape)
# Extract raster values
elev_mean <- raster::extract(elev_grid,grid_shape,fun=mean)
grid_shape@data$elevation <- elev_mean
summary(grid_shape@data$elevation)
dist <- c(-80,0,350,550,700,1000,3500)
plot.heat(grid_shape,z="elevation",breaks=dist,reverse=TRUE,plot.legend=F)
## Load Caloric Suitability Data
calories <- raster("/Users/janpierskalla/Library/CloudStorage/Dropbox/Paper - Imperialism Dynamics/Data/Caloric_Suitability/CaloricSuitabilityIndex/post1500AverageCalories.tif")
# Crop raster to include only Africa
e <- extent(grid_shape)
calories_crop <- crop(calories,e)
calories_grid <- mask(calories_crop, grid_shape)
# Extract raster values
calories_mean <- raster::extract(calories_grid,grid_shape,fun=mean)
grid_shape@data$calories_post1500 <- calories_mean
dist <- c(-1,0,500,800,1200,2000,2500)
plot.heat(grid_shape,z="calories_post1500",breaks=dist,reverse=TRUE,plot.legend=F)
grid_shape@data$cashcrop
grid_shape@data$cashcrop
grid_shape@data$cashcrop
## coffee
calories <- raster("/Users/janpierskalla/Library/CloudStorage/Dropbox/Paper - Imperialism Dynamics/Data/Caloric_Suitability/CropCSI/rainfed/coffeemed.tif")
## coffee
calories <- raster("/Users/janpierskalla/Library/CloudStorage/Dropbox/Paper - Imperialism Dynamics/Data/Caloric_Suitability/CropCSI/rain_fed/coffeemed.tif")
# Crop raster to include only Africa
e <- extent(grid_shape)
calories_crop <- crop(calories,e)
calories_grid <- mask(calories_crop, grid_shape)
# Extract raster values
calories_mean <- raster::extract(calories_grid,grid_shape,fun=mean)
grid_shape@data$coffee <- calories_mean
## cotton
calories <- raster("/Users/janpierskalla/Library/CloudStorage/Dropbox/Paper - Imperialism Dynamics/Data/Caloric_Suitability/CropCSI/rain_fed/cottonmed.tif")
# Crop raster to include only Africa
e <- extent(grid_shape)
calories_crop <- crop(calories,e)
calories_grid <- mask(calories_crop, grid_shape)
# Extract raster values
calories_mean <- raster::extract(calories_grid,grid_shape,fun=mean)
grid_shape@data$cotton <- calories_mean
## groundnuts
calories <- raster("/Users/janpierskalla/Library/CloudStorage/Dropbox/Paper - Imperialism Dynamics/Data/Caloric_Suitability/CropCSI/rain_fed/groundnutmed.tif")
# Crop raster to include only Africa
e <- extent(grid_shape)
calories_crop <- crop(calories,e)
calories_grid <- mask(calories_crop, grid_shape)
# Extract raster values
calories_mean <- raster::extract(calories_grid,grid_shape,fun=mean)
grid_shape@data$groundnut <- calories_mean
## oil palm
calories <- raster("/Users/janpierskalla/Library/CloudStorage/Dropbox/Paper - Imperialism Dynamics/Data/Caloric_Suitability/CropCSI/rain_fed/oilpalmmed.tif")
# Crop raster to include only Africa
e <- extent(grid_shape)
calories_crop <- crop(calories,e)
calories_grid <- mask(calories_crop, grid_shape)
# Extract raster values
calories_mean <- raster::extract(calories_grid,grid_shape,fun=mean)
grid_shape@data$oilpalm <- calories_mean
## tea
calories <- raster("/Users/janpierskalla/Library/CloudStorage/Dropbox/Paper - Imperialism Dynamics/Data/Caloric_Suitability/CropCSI/rain_fed/teamed.tif")
# Crop raster to include only Africa
e <- extent(grid_shape)
calories_crop <- crop(calories,e)
calories_grid <- mask(calories_crop, grid_shape)
# Extract raster values
calories_mean <- raster::extract(calories_grid,grid_shape,fun=mean)
grid_shape@data$tea <- calories_mean
## tobacco
calories <- raster("/Users/janpierskalla/Library/CloudStorage/Dropbox/Paper - Imperialism Dynamics/Data/Caloric_Suitability/CropCSI/rain_fed/tobaccomed.tif")
# Crop raster to include only Africa
e <- extent(grid_shape)
calories_crop <- crop(calories,e)
calories_grid <- mask(calories_crop, grid_shape)
# Extract raster values
calories_mean <- raster::extract(calories_grid,grid_shape,fun=mean)
grid_shape@data$tobacco <- calories_mean
## bananas
calories <- raster("/Users/janpierskalla/Library/CloudStorage/Dropbox/Paper - Imperialism Dynamics/Data/Caloric_Suitability/CropCSI/rain_fed/bananamed.tif")
# Crop raster to include only Africa
e <- extent(grid_shape)
calories_crop <- crop(calories,e)
calories_grid <- mask(calories_crop, grid_shape)
# Extract raster values
calories_mean <- raster::extract(calories_grid,grid_shape,fun=mean)
grid_shape@data$banana <- calories_mean
## cashcrop suitability average
grid_shape@data$cashcrop_suitability <- rowMeans(grid_shape@data[,c("coffee","cotton","groundnut","oilpalm","tea","tobacco","banana")],na.rm=T)
summary(grid_shape@data$cashcrop_suitability)
dist <- c(-1,0,500,900,1200,2500,3500)
plot.heat(grid_shape,z="cashcrop_suitability",breaks=dist,reverse=TRUE,plot.legend=F)
names(grid_shape@data)
dist <- c(-1,0,500,800,1200,2000,2500)
plot.heat(grid_shape,z="calories_post1500",breaks=dist,reverse=TRUE,plot.legend=F)
table(grid_shape@data$murdockgroup)
# add Murdoch
central <- readShapePoly("/Users/janpierskalla/Library/CloudStorage/Dropbox/Paper - Imperialism Dynamics/Data/Ethnic Pre-Colonial Centralization/murdock_shapefile/borders_tribes.shp",proj4string=llCRS)
plot(central)
central_data <- read.dta("/Users/janpierskalla/Library/CloudStorage/Dropbox/Paper - Imperialism Dynamics/Data/Ethnic Pre-Colonial Centralization/Ethnic Pre-Colonial Centralization/ethnicity-country-data-final.dta")
central_data <- read.dta("/Users/janpierskalla/Library/CloudStorage/Dropbox/Paper - Imperialism Dynamics/Data/Ethnic Pre-Colonial Centralization/ethnicity-country-data-final.dta")
central_data <- central_data[,c("name","centr_tribe1","gr")]
install.packages("murdock")
library(murdock)
devtools::install_github("sboysel/murdock")
library(devtools)
install.packages("devtools")
central_data <- read.dta("/Users/janpierskalla/Library/CloudStorage/Dropbox/Paper - Imperialism Dynamics/Data/Ethnic Pre-Colonial Centralization/ethnicity-country-data-final.dta")
central_data <- central_data[,c("name","centr_tribe","gr")]
# add information to grid
colnames(central_data)[1] <- "NAME"
central@data <- join(central@data, central_data, by="NAME", type="left")
gridlist <- over(grid_shape,central,returnList=T)
centr_tribe <- rep(NA,length(grid_shape@data[,1]))
gr <- rep(NA,length(grid_shape@data[,1]))
tribe_code_new <- rep(NA,length(grid_shape@data[,1]))
for (i in 1:N){
rows <- gridlist[[i]]
centr_tribe[i] <- mean(rows[,c("centr_tribe")],na.rm=T)
#centr_tribe1[i] <- mean(central@data[rows,c("centr_tribe1")],na.rm=T)
gr[i] <- mean(rows[,c("gr")],na.rm=T)
#gr[i] <- mean(central@data[rows,c("gr")],na.rm=T)
#tribe_code_new[i] <-  mean(rows[,c("TRIBE_CODE")],na.rm=T)
#tribe_code_new[i] <-  mean(central@data[rows,c("TRIBE_CODE")],na.rm=T)
}
# define size of grid
N <- length(grid_shape@data[,1])
for (i in 1:N){
rows <- gridlist[[i]]
centr_tribe[i] <- mean(rows[,c("centr_tribe")],na.rm=T)
#centr_tribe1[i] <- mean(central@data[rows,c("centr_tribe1")],na.rm=T)
gr[i] <- mean(rows[,c("gr")],na.rm=T)
#gr[i] <- mean(central@data[rows,c("gr")],na.rm=T)
#tribe_code_new[i] <-  mean(rows[,c("TRIBE_CODE")],na.rm=T)
#tribe_code_new[i] <-  mean(central@data[rows,c("TRIBE_CODE")],na.rm=T)
}
centr_tribe[is.nan(centr_tribe1)] <- NA
centr_tribe[is.nan(centr_tribe)] <- NA
gr[is.nan(gr)] <- NA
# add to the grid shape file
grid_shape@data$centr_tribe <- centr_tribe
grid_shape@data$gr <- gr
dist <- c(-1,0,1,2,3,4,5)
plot.heat(grid_shape,z="centr_tribe",breaks=dist,reverse=TRUE,plot.legend=F)
summary(grid_shape@data$centr_tribe)
summary(central@data$centr_tribe)
plot(central,add==TRUE)
plot(central)
library(devtools)
devtools::install_github("sboysel/murdock")
library(murdock)
names(murdock)
plot(murodck)
plot(murdock)
table(murdock@data$V33)
grid_shape@data$centr_tribe_alt <- grid_shape@data$centr_tribe
grid_shape@data$gr_alt <- grid_shape@data$gr
grid_shape@data$centr_tribe_alt[is.nan(grid_shape@data$centr_tribe_alt)] <- 0
grid_shape@data$gr_alt[is.nan(grid_shape@data$gr_alt)] <- 0
dist <- c(-1,0,1,2,3,4,5)
plot.heat(grid_shape,z="centr_tribe_alt",breaks=dist,reverse=TRUE,plot.legend=F)
summary(grid_shape@data$centr_tribe_alt)
grid_shape@data$centr_tribe_alt[is.na(grid_shape@data$centr_tribe_alt)] <- 0
grid_shape@data$gr_alt[is.na(grid_shape@data$gr_alt)] <- 0
dist <- c(-1,0,1,2,3,4,5)
plot.heat(grid_shape,z="centr_tribe_alt",breaks=dist,reverse=TRUE,plot.legend=F)
summary(grid_shape@data$centr_tribe_alt)
2000000*0.04
80000/12
95884/12
2000000*0.04
80000*0.75
60000/12
29,796+7800
29796+7800
